//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class QFramework_AudioManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(QFramework.AudioManager), typeof(QFramework.QMgrBehaviour));
		L.RegFunction("OnSingletonInit", OnSingletonInit);
		L.RegFunction("Dispose", Dispose);
		L.RegFunction("Init", Init);
		L.RegFunction("CheckAudioListener", CheckAudioListener);
		L.RegFunction("On", On);
		L.RegFunction("Off", Off);
		L.RegFunction("SetSoundOn", SetSoundOn);
		L.RegFunction("SetSoundOff", SetSoundOff);
		L.RegFunction("SetVoiceOn", SetVoiceOn);
		L.RegFunction("SetVoiceOff", SetVoiceOff);
		L.RegFunction("SetMusicOn", SetMusicOn);
		L.RegFunction("SetMusicOff", SetMusicOff);
		L.RegFunction("PlayMusic", PlayMusic);
		L.RegFunction("PlaySound", PlaySound);
		L.RegFunction("StopMusic", StopMusic);
		L.RegFunction("StopVoice", StopVoice);
		L.RegFunction("PauseMusic", PauseMusic);
		L.RegFunction("ResumeMusic", ResumeMusic);
		L.RegFunction("PlayVoice", PlayVoice);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("SoundOn", get_SoundOn, set_SoundOn);
		L.RegVar("ManagerId", get_ManagerId, null);
		L.RegVar("IsOn", get_IsOn, null);
		L.RegVar("IsSoundOn", get_IsSoundOn, null);
		L.RegVar("IsMusicOn", get_IsMusicOn, null);
		L.RegVar("IsVoiceOn", get_IsVoiceOn, null);
		L.RegVar("SoundVolume", get_SoundVolume, null);
		L.RegVar("MusicVolume", get_MusicVolume, null);
		L.RegVar("VoiceVolume", get_VoiceVolume, null);
		L.RegVar("Instance", get_Instance, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OnSingletonInit(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)ToLua.CheckObject<QFramework.AudioManager>(L, 1);
			obj.OnSingletonInit();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Dispose(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)ToLua.CheckObject<QFramework.AudioManager>(L, 1);
			obj.Dispose();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)ToLua.CheckObject<QFramework.AudioManager>(L, 1);
			obj.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckAudioListener(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)ToLua.CheckObject<QFramework.AudioManager>(L, 1);
			obj.CheckAudioListener();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int On(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.On();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Off(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.Off();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSoundOn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.SetSoundOn();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetSoundOff(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.SetSoundOff();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVoiceOn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.SetVoiceOn();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetVoiceOff(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.SetVoiceOff();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMusicOn(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.SetMusicOn();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetMusicOff(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.SetMusicOff();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayMusic(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				QFramework.AudioManager.PlayMusic(arg0);
				return 0;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				QFramework.AudioManager.PlayMusic(arg0, arg1);
				return 0;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				QFramework.AudioManager.PlayMusic(arg0, arg1, arg2);
				return 0;
			}
			else if (count == 4)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				System.Action arg3 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 4);
				QFramework.AudioManager.PlayMusic(arg0, arg1, arg2, arg3);
				return 0;
			}
			else if (count == 5)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				System.Action arg3 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 4);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
				QFramework.AudioManager.PlayMusic(arg0, arg1, arg2, arg3, arg4);
				return 0;
			}
			else if (count == 6)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				System.Action arg2 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 3);
				System.Action arg3 = (System.Action)ToLua.CheckDelegate<System.Action>(L, 4);
				bool arg4 = LuaDLL.luaL_checkboolean(L, 5);
				float arg5 = (float)LuaDLL.luaL_checknumber(L, 6);
				QFramework.AudioManager.PlayMusic(arg0, arg1, arg2, arg3, arg4, arg5);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: QFramework.AudioManager.PlayMusic");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlaySound(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				QFramework.AudioUnit o = QFramework.AudioManager.PlaySound(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				QFramework.AudioUnit o = QFramework.AudioManager.PlaySound(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				System.Action<QFramework.AudioUnit> arg2 = (System.Action<QFramework.AudioUnit>)ToLua.CheckDelegate<System.Action<QFramework.AudioUnit>>(L, 3);
				QFramework.AudioUnit o = QFramework.AudioManager.PlaySound(arg0, arg1, arg2);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 4)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				System.Action<QFramework.AudioUnit> arg2 = (System.Action<QFramework.AudioUnit>)ToLua.CheckDelegate<System.Action<QFramework.AudioUnit>>(L, 3);
				int arg3 = (int)LuaDLL.luaL_checknumber(L, 4);
				QFramework.AudioUnit o = QFramework.AudioManager.PlaySound(arg0, arg1, arg2, arg3);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: QFramework.AudioManager.PlaySound");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopMusic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.StopMusic();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int StopVoice(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.StopVoice();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PauseMusic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.PauseMusic();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ResumeMusic(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.AudioManager.ResumeMusic();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PlayVoice(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				QFramework.AudioManager.PlayVoice(arg0);
				return 0;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 2);
				QFramework.AudioManager.PlayVoice(arg0, arg1);
				return 0;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: QFramework.AudioManager.PlayVoice");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SoundOn(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)o;
			UniRx.BoolReactiveProperty ret = obj.SoundOn;
			ToLua.PushObject(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SoundOn on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ManagerId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)o;
			int ret = obj.ManagerId;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index ManagerId on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsOn(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, QFramework.AudioManager.IsOn);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsSoundOn(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, QFramework.AudioManager.IsSoundOn);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsMusicOn(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, QFramework.AudioManager.IsMusicOn);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_IsVoiceOn(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, QFramework.AudioManager.IsVoiceOn);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SoundVolume(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)o;
			float ret = obj.SoundVolume;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SoundVolume on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_MusicVolume(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)o;
			float ret = obj.MusicVolume;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index MusicVolume on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_VoiceVolume(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)o;
			float ret = obj.VoiceVolume;
			LuaDLL.lua_pushnumber(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index VoiceVolume on a nil value");
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Instance(IntPtr L)
	{
		try
		{
			ToLua.Push(L, QFramework.AudioManager.Instance);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_SoundOn(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QFramework.AudioManager obj = (QFramework.AudioManager)o;
			UniRx.BoolReactiveProperty arg0 = (UniRx.BoolReactiveProperty)ToLua.CheckObject<UniRx.BoolReactiveProperty>(L, 2);
			obj.SoundOn = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index SoundOn on a nil value");
		}
	}
}

