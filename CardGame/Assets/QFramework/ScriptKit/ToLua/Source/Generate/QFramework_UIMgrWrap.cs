//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class QFramework_UIMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginStaticLibs("UIMgr");
		L.RegFunction("Push", Push);
		L.RegFunction("SetResolution", SetResolution);
		L.RegFunction("GetPanel", GetPanel);
		L.RegFunction("OpenPanel", OpenPanel);
		L.RegFunction("ClosePanel", ClosePanel);
		L.RegVar("Camera", get_Camera, null);
		L.EndStaticLibs();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Push(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QFramework.UIPanel arg0 = (QFramework.UIPanel)ToLua.CheckObject<QFramework.UIPanel>(L, 1);
			QFramework.UIMgr.Push(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SetResolution(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			float arg2 = (float)LuaDLL.luaL_checknumber(L, 3);
			QFramework.UIMgr.SetResolution(arg0, arg1, arg2);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetPanel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			QFramework.UIPanel o = QFramework.UIMgr.GetPanel(arg0);
			ToLua.Push(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int OpenPanel(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 1)
			{
				string arg0 = ToLua.CheckString(L, 1);
				QFramework.UIPanel o = QFramework.UIMgr.OpenPanel(arg0);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 2)
			{
				string arg0 = ToLua.CheckString(L, 1);
				QFramework.UILevel arg1 = (QFramework.UILevel)ToLua.CheckObject(L, 2, typeof(QFramework.UILevel));
				QFramework.UIPanel o = QFramework.UIMgr.OpenPanel(arg0, arg1);
				ToLua.Push(L, o);
				return 1;
			}
			else if (count == 3)
			{
				string arg0 = ToLua.CheckString(L, 1);
				QFramework.UILevel arg1 = (QFramework.UILevel)ToLua.CheckObject(L, 2, typeof(QFramework.UILevel));
				string arg2 = ToLua.CheckString(L, 3);
				QFramework.UIPanel o = QFramework.UIMgr.OpenPanel(arg0, arg1, arg2);
				ToLua.Push(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: QFramework.UIMgr.OpenPanel");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClosePanel(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			QFramework.UIMgr.ClosePanel(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Camera(IntPtr L)
	{
		try
		{
			ToLua.PushSealed(L, QFramework.UIMgr.Camera);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

