//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class QFramework_ResMgrWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(QFramework.ResMgr), typeof(QFramework.MonoSingleton<QFramework.ResMgr>));
		L.RegFunction("Init", Init);
		L.RegFunction("InitResMgr", InitResMgr);
		L.RegFunction("ClearOnUpdate", ClearOnUpdate);
		L.RegFunction("PushIEnumeratorTask", PushIEnumeratorTask);
		L.RegFunction("GetRes", GetRes);
		L.RegFunction("RemoveUnusedRes", RemoveUnusedRes);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("Count", get_Count, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			QFramework.ResMgr.Init();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int InitResMgr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QFramework.ResMgr obj = (QFramework.ResMgr)ToLua.CheckObject<QFramework.ResMgr>(L, 1);
			obj.InitResMgr();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int ClearOnUpdate(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QFramework.ResMgr obj = (QFramework.ResMgr)ToLua.CheckObject<QFramework.ResMgr>(L, 1);
			obj.ClearOnUpdate();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PushIEnumeratorTask(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			QFramework.ResMgr obj = (QFramework.ResMgr)ToLua.CheckObject<QFramework.ResMgr>(L, 1);
			QFramework.IEnumeratorTask arg0 = (QFramework.IEnumeratorTask)ToLua.CheckObject<QFramework.IEnumeratorTask>(L, 2);
			obj.PushIEnumeratorTask(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetRes(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 2)
			{
				QFramework.ResMgr obj = (QFramework.ResMgr)ToLua.CheckObject<QFramework.ResMgr>(L, 1);
				QFramework.ResSearchRule arg0 = (QFramework.ResSearchRule)ToLua.CheckObject<QFramework.ResSearchRule>(L, 2);
				QFramework.IRes o = obj.GetRes(arg0);
				ToLua.PushObject(L, o);
				return 1;
			}
			else if (count == 3)
			{
				QFramework.ResMgr obj = (QFramework.ResMgr)ToLua.CheckObject<QFramework.ResMgr>(L, 1);
				QFramework.ResSearchRule arg0 = (QFramework.ResSearchRule)ToLua.CheckObject<QFramework.ResSearchRule>(L, 2);
				bool arg1 = LuaDLL.luaL_checkboolean(L, 3);
				QFramework.IRes o = obj.GetRes(arg0, arg1);
				ToLua.PushObject(L, o);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to method: QFramework.ResMgr.GetRes");
			}
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int RemoveUnusedRes(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			QFramework.ResMgr obj = (QFramework.ResMgr)ToLua.CheckObject<QFramework.ResMgr>(L, 1);
			obj.RemoveUnusedRes();
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_Count(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			QFramework.ResMgr obj = (QFramework.ResMgr)o;
			int ret = obj.Count;
			LuaDLL.lua_pushinteger(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o, "attempt to index Count on a nil value");
		}
	}
}

